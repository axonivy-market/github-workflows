name: Reusable CI-Build

on: 
  workflow_call:
    inputs:
      mvnArgs:
        type: string
        required: false
      javaVersion:
        type: number
        default: 21
      mvnVersion:
        type: string
        default: 3.9.8
      skipMigrateToLatestIvyVersion:
        type: string
        default: 'true'
    secrets:
      mvnArgs:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.javaVersion }}
        distribution: temurin

    - name: Setup Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: ${{ inputs.mvnVersion }}

    - name: Download latest ivy engine
      if: ${{ inputs.skipMigrateToLatestIvyVersion != 'true' }}
      run: |
        export IVY_JAVA_HOME=$JAVA_HOME_21_X64
        engineUrl="https://dev.axonivy.com/permalink/${{ inputs.ivyVersion }}/axonivy-engine.zip"
        echo "workDir=$(pwd)" >> $GITHUB_ENV
        DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
        if [ -z "$workDir" ]; then
          workDir=$(mktemp -d -t projectConvertXXX)
          echo "workDir: $workDir"
        fi
        if [ -z "$gitDir" ]; then
          gitDir="$DIR/repos"
          echo $(mkdir -v -p $DIR/repos)
        fi
        if ! [ -d "${workDir}/engine" ]; then
          echo "Downloading engine from ${engineUrl}"
          (cd "$workDir" && curl --progress-bar -L -O "${engineUrl}") 
          zipped=$(find "${workDir}" -maxdepth 1 -name "*.zip")
          unzip -qq "${zipped}" -d "${workDir}/engine"
          rm "${zipped}"
        fi

    - name: Convert projects to latest ivy version
      if: ${{ inputs.skipMigrateToLatestIvyVersion != 'true' }}
      run: |
        gitDir=$(pwd)
        gitName=$(basename ${gitDir})
        echo "Searching projects in ${gitDir}"
        projects=()
        for ivyPref in $(find ${gitDir} -name "ch.ivyteam.ivy.designer.prefs"); do
          project=$(dirname $(dirname $ivyPref))
          if ! [ -f "${project}/pom.xml" ]; then
            continue # prefs file not in natural project structure
          fi
          projects+=("${project}")
        done
        echo "Collected projects: ${projects[@]}"
        if [ ${projects[@]} -gt 0 ]; then
          ${workDir}/engine/bin/EngineConfigCli migrate-project ${projects[@]}
        fi

    - name: Build with Maven
      run: mvn clean verify --batch-mode --fail-at-end ${{ inputs.mvnArgs }} ${{ secrets.mvnArgs }}

    - name: Check if test results exist
      id: check_test_files
      if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
      run: |
        if [[ "${{ hashFiles('**/target/*-reports/*.xml') }}" != "" ]]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Remove test summary files
      if: steps.check_test_files.outputs.exists == 'true'
      run: rm -f **/target/*-reports/*-summary.xml

    - name: Publish Unit Test Results with dorny/test-reporter 
      id: test_report
      uses: dorny/test-reporter@v1.9.1
      if: steps.check_test_files.outputs.exists == 'true'
      with:
        name: JUnit Test Results
        reporter: java-junit
        path: '**/target/*-reports/*.xml'
        fail-on-error: 'false'

    - name: Export test results to json file
      if: steps.check_test_files.outputs.exists == 'true'
      run: |
        response=$(curl ${{ steps.test_report.outputs.url }})
        echo $response > test_report.json

    - name: Archive test json file
      uses: actions/upload-artifact@v4
      if: steps.check_test_files.outputs.exists == 'true'
      with:
        name: export-test-json-file
        retention-days: 5
        path: 'test_report.json'

    - name: Publish Unit Test Results with EnricoMi
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: |
          */target/*-reports/*.xml
          !*/target/*-reports/failsafe-summary.xml
        action_fail: true
  
    - name: Archive build artifact
      uses: actions/upload-artifact@v4
      with:
        path: |
          */target/*.iar
          */target/*-[0-9]*.jar
          *product/target/*.zip

    - name: Archive test reports
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-reports
        retention-days: 5
        path: |
          */target/testEngineOut.log
          */target/selenide/*
          */target/ivyEngine/deploy/*/*.deploymentLog
